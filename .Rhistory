df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
all(df_true$event == df_converted$event)
all(df_true$duration == df_converted$duration)
test_that("convert duration to binary work", {
sim_data <- simulate_bison_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
df_true <- df
df$event <- abs(rnorm(nrow(df), df$event, 0.1))
df$duration <- abs(rnorm(nrow(df), df$duration, 0.1))
df_converted <- convert_duration_to_binary(df, "event", "duration", 1)
expect_true(all(df_true$event == df_converted$event))
expect_true(all(df_true$duration == df_converted$duration))
})
devtools::document()
devtools::test()
sim_data <- bisonR::simulate_bison_model("binary", aggregated = TRUE)
df_sim <- sim_data$df_sim
levels(df_sim$node_1_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
levels(df_sim$node_2_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df_sim,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
df_nodal <- data.frame(node=as.factor(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")))
df_nodal$trait <- rnorm(10)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
fit_edge,
df_nodal,
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
df_nodal <- data.frame(node=as.factor(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")))
df_nodal$trait <- rnorm(10)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
fit_edge,
df_nodal,
num_draws=5,
silent=2,
refresh=0,
z_score=TRUE
)),
regexp=NA
)
devtools::load_all(".")
df_nodal <- data.frame(node=as.factor(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")))
df_nodal$trait <- rnorm(10)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
fit_edge,
df_nodal,
num_draws=5,
silent=2,
refresh=0,
z_score=TRUE
)),
regexp=NA
)
devtools::load_all(".")
df_nodal <- data.frame(node=as.factor(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")))
df_nodal$trait <- rnorm(10)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
fit_edge,
df_nodal,
num_draws=5,
silent=2,
refresh=0,
z_score=TRUE
)),
regexp=NA
)
devtools::load_all(".")
df_nodal <- data.frame(node=as.factor(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")))
df_nodal$trait <- rnorm(10)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
fit_edge,
df_nodal,
num_draws=5,
silent=2,
refresh=0,
z_score=TRUE
)),
regexp=NA
)
devtools::check()
devtools::build_vignettes("mixture_models")
devtools::build_vignettes("mixture_models.Rmd")
devtools::build_vignettes("mixture_models")
ls
pkgdown::build_article("mixture_models")
devtools::install()
pkgdown::build_article("mixture_models")
devtools::document()
sim_data <- bisonR::simulate_bison_model("binary", aggregated = TRUE)
df_sim <- sim_data$df_sim
levels(df_sim$node_1_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
levels(df_sim$node_2_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df_sim,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
bison_to_igraph(fit_edge, num_draws=10)
nets <- expect_warning(
bison_to_igraph(fit_edge, num_draws=10),
regexp=NA
)
test_that("bison to igraph conversion works", {
sim_data <- bisonR::simulate_bison_model("binary", aggregated = TRUE)
df_sim <- sim_data$df_sim
levels(df_sim$node_1_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
levels(df_sim$node_2_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df_sim,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
nets <- expect_warning(
bison_to_igraph(fit_edge, num_draws=10),
regexp=NA
)
expect_true(length(nets) == 10)
})
devtools::test_active_file()
class(nets[[1]])
devtools::load_all(".")
nets <- expect_warning(
bison_to_igraph(fit_edge, num_draws=10),
regexp=NA
)
expect_true(length(nets) == 10)
class(nets[[1]])
devtools::load_all(".")
devtools::test_active_file()
devtools::install()
remove.packages("igraph")
devtools::install()
bison_to_igraph
pkgdown::build_site()
devtools::document()
pkgdown::deploy_to_branch(new_process=FALSE)
rgamma(1e5, 0.01 + 0, 0.01 + 36)
is.infinite(rgamma(1e5, 0.01 + 0, 0.01 + 36))
any(is.infinite(rgamma(1e5, 0.01 + 0, 0.01 + 36)))
any(is.infinite(rgamma(1e5, 0.001 + 0, 0.001 + 36)))
any(is.infinite(rgamma(1e5, 0.01 + 0, 0.01 + 36)))
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
fit_mixture$fit_mixtures
fit_mixture$fit_mixtures[[1]]
fit_mixture$fit_mixtures[[1]]$classification
fit_mixture$fit_mixtures[[3]]$
fit_mixture$fit_mixtures[[3]]$classification
fit_mixture$fit_mixtures[[3]]$parameters
fit_mixture$fit_mixtures[[3]]$parameters$mean
plogis(fit_mixture$fit_mixtures[[3]]$parameters$mean)
fit_mixture$fit_mixtures[[3]]$parameters
devtools::load_all(".")
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
summary(fit_mixture)
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
fit_mixture_summary <- expect_warning(summary(fit_mixture), regexp=NA)
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
fit_mixture_summary <- expect_warning(summary(fit_mixture), regexp=NA)
summary(fit_mixture)
summary(fit_mixture)
fit_mixture
fit_mixture$fit_mixtures
fit_mixture$fit_mixtures[[1]]
fit_mixture$fit_mixtures[[1]]$parameters$mean
fit_mixture$fit_mixtures[[2]]$parameters$mean
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
fit_mixture$fit_mixtures
devtools::load_all(".")
devtools::load_all(".")
fit_mixture$fit_mixtures
summary(fit_mixture)
summary(fit_mixture)$component_probabilities
devtools::load_all(".")
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
summary(fit_mixture)$bison_mixture_obj
devtools::load_all(".")
summary(fit_mixture)
summary(fit_mixture)$bison_mixture_obj
summary(fit_mixture)$bison_mixture_obj$model_type
x <- summary(fit_mixture)$bison_mixture_obj
x$edgemodel$model_type
devtools::load_all(".")
summary(fit_mixture)
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::load_all(".")
summary(fit_mixture)
devtools::test_active_file()
library(bisonR)
library(dplyr)
library(igraph)
library(brms)
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
head(df)
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate"
)
fit_mixture <- bison_mixture(fit_edge, num_components=5, verbose=FALSE) # verbose=FALSE for tutorial purposes
summary(fit_mixture)
fit_mixture$component_means
list()[[1]]
x <- list()
x[[1]]
x[[1]] <- 0
len(x[[2]])
is_null(x[[2]])
2 in x
2 in names(x)
2 %in% names(x)
"2" %in% names(x)
is.null(x[[2]])
x
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
fit_mixture_summary <- expect_warning(summary(fit_mixture), regexp=NA)
summary(fit_mixture)
fit_mixture$component_means
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
fit_mixture$component_means
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
summary(fit_mixture)
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
summary(fit_mixture)
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
summary(fit_mixture)
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
summary(fit_mixture),
summary(fit_mixture)
apply(fit_mixture$component_mean_samples[[2]], 2, mean)
apply(fit_mixture$component_mean_samples[[2]], 2, sd)
apply(fit_mixture$component_mean_samples[[2]], 2, mean)
apply(fit_mixture$component_mean_samples[[3]], 2, mean)
apply(fit_mixture$component_mean_samples[[3]], 2, median)
devtools::test_active_file()
remotes::install_github("JHart96/bisonR@dev")
devtools::load_all(".")
get_component_means(fit_mixture, 3)
devtools::load_all(".")
devtools::load_all(".")
get_component_means(fit_mixture, 3)
devtools::load_all(".")
get_component_means(fit_mixture, 3)
devtools::load_all(".")
get_component_means(fit_mixture, 3)
devtools::load_all(".")
devtools::document()
devtools::test_active_file()
devtools::load_all(".")
get_component_means(fit_mixture, 3)
get_component_means(fit_mixture, 3, ci=0.5)
get_component_means(fit_mixture, 3)
?mclust::Mclust
devtools::load_all(".")
sim_data <- simulate_bison_model_mixture("binary", num_components = 2, component_weights = c(0.5, 0.5))
df <- sim_data$df_sim
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
fit_mixture <- expect_warning(
bison_mixture(fit_edge, num_components=3, verbose=TRUE),
regexp=NA
)
