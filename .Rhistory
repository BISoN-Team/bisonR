(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
warnings()
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
fit_edge$dyad_to_idx
fit_edge$dyad_to_idx[, 1] == 1
fit_edge$dyad_to_idx[, 1] == 1 & fit_edge$dyad_to_idx[, 2] == 2
which(fit_edge$dyad_to_idx[, 1] == 1 & fit_edge$dyad_to_idx[, 2] == 2)
which(fit_edge$dyad_to_idx[, 1] == 1 && fit_edge$dyad_to_idx[, 2] == 2)
devtools::load_all(".")
which(fit_edge$dyad_to_idx[, 1] == 1 && fit_edge$dyad_to_idx[, 2] == 2)
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
df
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
devtools::load_all(".")
sim_data <- simulate_bison_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
df
get_dyad_ids(df$node_1_id, df$node_2_id, fit_edge$dyad_to_idx, directed=TRUE)
devtools::load_all(".")
get_dyad_ids(df$node_1_id, df$node_2_id, fit_edge$dyad_to_idx, directed=TRUE)
fit_edge$dyad_to_idx
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id)
df$node_1_id[2]
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[2])
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[2] && fit_edge$dyad_to_idx[, 2] == df$node_2_id[2])
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[2] && fit_edge$dyad_to_idx[, 2] == df$node_2_id[2])
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[2] && fit_edge$dyad_to_idx[, 2] == df$node_2_id[2])
fit_edge$dyad_to_idx
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[2] & fit_edge$dyad_to_idx[, 2] == df$node_2_id[2])
fit_edge$dyad_to_idx[, 1] == df$node_1_id[2]
fit_edge$dyad_to_idx[, 2] == df$node_2_id[2]
df$node_2_id[2]
fit_edge$dyad_to_idx[, 2]
fit_edge$dyad_to_idx
df
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[2] && fit_edge$dyad_to_idx[, 2] == df$node_2_id[2])
get_dyad_ids(df$node_1_id, df$node_2_id, fit_edge$dyad_to_idx, directed=TRUE)
df
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[5] && fit_edge$dyad_to_idx[, 2] == df$node_2_id[5])
fit_edge$dyad_to_idx[, 1]
fit_edge$dyad_to_idx[, 1] == df$node_1_id[5]
fit_edge$dyad_to_idx[, 2]
fit_edge$dyad_to_idx[, 2] == df$node_2_id[5]
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[5] & fit_edge$dyad_to_idx[, 2] == df$node_2_id[5])
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[5] && fit_edge$dyad_to_idx[, 2] == df$node_2_id[5])
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[5] & fit_edge$dyad_to_idx[, 2] == df$node_2_id[5])
which(fit_edge$dyad_to_idx[, 1] == df$node_1_id[5] & fit_edge$dyad_to_idx[, 2] == df$node_2_id[5])[[1]]
get_dyad_ids(df$node_1_id, df$node_2_id, fit_edge$dyad_to_idx, directed=TRUE)
devtools::load_all(".")
get_dyad_ids(df$node_1_id, df$node_2_id, fit_edge$dyad_to_idx, directed=TRUE)
get_dyad_ids(df$node_2_id, df$node_1_id, fit_edge$dyad_to_idx, directed=TRUE)
devtools::load_all(".")
devtools::load_all(".")
fit_edge <- expect_warning(
bison_model (
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
model_type="binary",
directed=TRUE,
priors=get_default_priors("binary")
),
regexp=NA
)
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
get_edgelist(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::load_all(".")
plot_predictions(fit_edge)
devtools::test()
devtools::test()
devtools::test_active_file()
devtools::test()
devtools::document()
devtools::check_man()
usethis::use_vignette("bison_brms")
plot(density(rbeta(1e5, 1, 1)))
curve(dbeta(x/24, 1, 1))
curve(dbeta(x/24, 2, 2))
curve(dbeta(x/24, 5, 5))
curve(dbeta(x/24, 5, 1))
curve(dbeta(x/24, 2, 5))
curve(dbeta(x/24, 2, 10))
curve(dbeta(x/24, 2, 10), from=0, to=24)
curve(dbeta(x/24, 2, 2), from=0, to=24)
curve(dbeta(x/24, 5, 5), from=0, to=24)
curve(dbeta(x/24, 8, 5), from=0, to=24)
curve(dbeta(x/24, 4, 3), from=0, to=24)
curve(dbeta(x/24, 4, 2), from=0, to=24)
curve(dbeta(x/24, 4, 3), from=0, to=24)
curve(dbeta(x/24, 4, 2.5), from=0, to=24)
curve(dbeta(x/24, 4, 3), from=0, to=24)
curve(0.1 + 0.9 * dbeta(x/24, 4, 3), from=0, to=24)
curve(0.1 + 0.9 * dbeta(x/24, 4, 3), from=0, to=24, ylim=c(0, NA))
curve(0.1 + 0.9 * dbeta(x/24, 4, 3), from=0, to=24, ylim=c(0, NULL))
curve(0.1 + 0.9 * dbeta(x/24, 4, 3), from=0, to=24, ylim=c(0, 2))
curve(0.1 + 0.9 * dbeta(x/24, 3, 3), from=0, to=24, ylim=c(0, 2))
curve(0.1 + 0.9 * dbeta(x/24, 5, 5), from=0, to=24, ylim=c(0, 2))
curve(0.1 + 0.9 * dbeta(x/24, 5, 7), from=0, to=24, ylim=c(0, 2))
curve(0.1 + 0.9 * dbeta(x/24, 7, 5), from=0, to=24, ylim=c(0, 2))
sim_data <- bisonR::simulate_bison_model("binary", aggregated = TRUE)
df_sim <- sim_data$df_sim
levels(df_sim$node_1_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
levels(df_sim$node_2_id) <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
fit_edge <- bison_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df_sim,
model_type="binary_conjugate",
priors=get_default_priors("binary_conjugate")
)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
df_nodal <- data.frame(node=as.factor(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")))
df_nodal$trait <- rnorm(10)
expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
fit_brm <- expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)) + bison_network,
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
devtools::load_all(".")
fit_brm <- expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)) + bison_network,
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
fit_brm <- expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
devtools::load_all(".")
fit_brm <- expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)),
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
fit_brm <- expect_error(
suppressWarnings(bison_brm(
trait ~ bison(node_eigen(node)) + bison_network,
list(fit_edge, fit_edge),
list(df_nodal, df_nodal),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
fit_brm
df_global <- data.frame(bison_network=as.factor(c("1", "2")), condition=c("before", "after"))
df_global
df_global <- data.frame(bison_network=as.factor(c("1", "2")), condition=c("before", "after"))
fit_brm <- expect_error(
suppressWarnings(bison_brm(
bison(global(bison_network)) ~ condition,
list(fit_edge, fit_edge),
list(df_global[1, ], df_global[2, ]),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
devtools::load_all(".")
fit_brm <- expect_error(
suppressWarnings(bison_brm(
bison(global(bison_network)) ~ condition,
list(fit_edge, fit_edge),
list(df_global[1, ], df_global[2, ]),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
fit_brm <- expect_error(
suppressWarnings(bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
list(df_global[1, ], df_global[2, ]),
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
fit_brm
df_global
lapply(1:2, function(i) df_global[i, ])
class(lapply(1:2, function(i) df_global[i, ]))
class(lapply(1:2, function(i) df_global[i, ])) == "data.frame"
df_global == "data.frame"
class(df_global) == "data.frame"
fit_brm <- expect_error(
suppressWarnings(bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global
num_draws=5,
devtools::load_all(".")
fit_brm <- expect_error(
suppressWarnings(bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)),
regexp=NA
)
bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)
nrow(df_global)
devtools::load_all(".")
bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)
devtools::load_all(".")
bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)
devtools::load_all(".")
bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)
class(df_global)
devtools::load_all(".")
bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)
devtools::load_all(".")
bison_brm(
bison(global_cv(bison_network)) ~ condition,
list(fit_edge, fit_edge),
df_global,
num_draws=5,
silent=2,
refresh=0
)
fit_brm
pkgdown::build_article("bison_brms")
pkgdown::build_article("bison_brms")
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
extract_metric(fit_edge)
extract_metric(fit_edge, "edge_weight")
extract_metric(fit_edge, "edge_weight")
unlist(extract_metric(fit_edge, "edge_weight"))
c(extract_metric(fit_edge, "edge_weight"))
plot(density(c(extract_metric(fit_edge, "edge_weight"))))
plot(density(c(extract_metric(fit_edge, "edge_weight", standardise=TRUE))))
plot(density(c(extract_metric(plogis(fit_edge), "edge_weight", standardise=TRUE))))
plot(density(plogis(c(extract_metric(fit_edge, "edge_weight", standardise=TRUE)))))
plot_predictions(fit_edge, type="density")
plogis(0.1)
plot(density(plogis(c(extract_metric(fit_edge, "node_strength", standardise=TRUE)))))
extract_metric(fit_edge, "node_strength", standardise=TRUE)
extract_metric(fit_edge, "node_strength", standardise=FALSE)
get_default_priors("count_conjugate")
prior_check(get_default_priors("count_conjugate"))
plot(density(rgamma(1e5, 0.01, 0.01)))
plot(density(rgamma(1e5, 0.01, 0.01)))
plot(density(rgamma(1e5, 0.01, 0.01)))
plot(density(rgamma(1e5, 0.01, 0.01)))
plot(density(rgamma(1e5, 1, 1)))
plot(density(rgamma(1e5, 0.1, 0.1)))
plot(density(rgamma(1e5, 0.01, 0.01)))
