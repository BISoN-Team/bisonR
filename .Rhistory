priors$error <- "half-normal(2.5)"
priors
df_dyadic <- df %>%
distinct(node_1_id, node_2_id, age_diff)
fit_dyadic <- dyadic_regression(dyad(node_1_id, node_2_id) ~ age_diff, fit_edge, df_dyadic, mm=FALSE, priors=priors)
plot_trace(fit_dyadic)
plot_predictions(fit_dyadic, num_draws=20)
summary(fit_dyadic)
df_1 <- df %>%
select(node_id=node_1_id, age=age_1)
df_2 <- df %>%
select(node_id=node_2_id, age=age_2)
df_nodal <- bind_rows(df_1, df_2) %>%
distinct(node_id, age)
df_nodal
priors <- get_default_priors("nodal_regression")
priors$error <- "half-normal(2.5)"
priors
fit_nodal <- nodal_regression(strength(node_id) ~ age, fit_edge, df_nodal, priors=priors)
plot_trace(fit_nodal)
plot_predictions(fit_nodal, num_draws=20)
summary(fit_nodal)
library(bisonR)
devtools::test()
devtools::check()
devtools::check()
library(bisonR)
devtools::check()
devtools::test()
devtools::test()
devtools::load_all(".")
sim_data <- simulate_edge_model("binary", aggregated = FALSE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("binary")
priors
priors$fixed <- "normal(0, 2.5)"
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
summary(fit_edge)
plot_network(fit_edge, lwd=5)
priors <- get_default_priors("dyadic_regression")
priors$error <- "half-normal(2.5)"
priors
df_dyadic <- df %>%
distinct(node_1_id, node_2_id, age_diff)
fit_dyadic <- dyadic_regression(dyad(node_1_id, node_2_id) ~ age_diff, fit_edge, df_dyadic, mm=FALSE, priors=priors)
plot_trace(fit_dyadic)
plot_predictions(fit_dyadic, num_draws=20)
summary(fit_dyadic)
df_1 <- df %>%
select(node_id=node_1_id, age=age_1)
df_2 <- df %>%
select(node_id=node_2_id, age=age_2)
df_nodal <- bind_rows(df_1, df_2) %>%
distinct(node_id, age)
df_nodal
priors <- get_default_priors("nodal_regression")
priors$error <- "half-normal(2.5)"
priors
fit_nodal <- nodal_regression(strength(node_id) ~ age, fit_edge, df_nodal, priors=priors)
plot_trace(fit_nodal)
plot_predictions(fit_nodal, num_draws=20)
summary(fit_nodal)
devtools::load_all(".")
summary(fit_nodal)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(bisonR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::check()
devtools::document()
pkgdown::build_home()
pkgdown::build_search()
pkgdown::build()
pkgdown::build_site()
usethis::use_citation()
devtools::check()
?cmdstanr::check_cmdstan_toolchain
library(dplyr)
devtools::load_all(".")
sim_data <- simulate_edge_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
sim_data <- simulate_edge_model("count", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("binary_conjugate")
priors
priors
devtools::load_all(".")
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
devtools::load_all(".")
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
devtools::load_all(".")
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
devtools::load_all(".")
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
devtools::load_all(".")
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
sim_data <- simulate_edge_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("binary_conjugate")
priors
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
devtools::load_all(".")
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
plot_trace(fit_edge)
priors <- get_default_priors("binary")
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_count",
priors=priors
)
priors <- get_default_priors("binary")
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
plot_predictions(fit_edge_conjugate, num_draws=20)
# summary(fit_edge)
sri <- df %>%
mutate(edge_weight=event/duration) %>%
select(node_1=node_1_id, node_2=node_2_id, edge_weight=edge_weight, event=event, duration=duration)
est <- get_edgelist(fit_edge, transform=TRUE) %>%
select(node_1, node_2, est=median, est_lb="5%", est_ub="95%")
comparison <- left_join(sri, est, by=c("node_1", "node_2"))
plot(comparison$edge_weight, comparison$est)
arrows(x0=comparison$edge_weight, y0=comparison$est_lb, x1=comparison$edge_weight, y1=comparison$est_ub, angle=0)
abline(a=0, b=1)
# summary(fit_edge)
sri <- df %>%
mutate(edge_weight=event/duration) %>%
select(node_1=node_1_id, node_2=node_2_id, edge_weight=edge_weight, event=event, duration=duration)
est <- get_edgelist(fit_edge_conjugate, transform=TRUE) %>%
select(node_1, node_2, est=median, est_lb="5%", est_ub="95%")
comparison <- left_join(sri, est, by=c("node_1", "node_2"))
plot(comparison$edge_weight, comparison$est)
arrows(x0=comparison$edge_weight, y0=comparison$est_lb, x1=comparison$edge_weight, y1=comparison$est_ub, angle=0)
abline(a=0, b=1)
sim_data <- simulate_edge_model("count", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("count")
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="count",
priors=priors
)
priors <- get_default_priors("binary_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
View(df)
df
priors <- get_default_priors("count")
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="count",
priors=priors
)
priors <- get_default_priors("count_conjugate")
fit_edge_conjugate <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="count_conjugate",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
plot_predictions(fit_edge_conjugate, num_draws=20)
# summary(fit_edge)
sri <- df %>%
mutate(edge_weight=event/duration) %>%
select(node_1=node_1_id, node_2=node_2_id, edge_weight=edge_weight, event=event, duration=duration)
est <- get_edgelist(fit_edge_conjugate, transform=TRUE) %>%
select(node_1, node_2, est=median, est_lb="5%", est_ub="95%")
comparison <- left_join(sri, est, by=c("node_1", "node_2"))
plot(comparison$edge_weight, comparison$est)
arrows(x0=comparison$edge_weight, y0=comparison$est_lb, x1=comparison$edge_weight, y1=comparison$est_ub, angle=0)
abline(a=0, b=1)
# summary(fit_edge)
sri <- df %>%
mutate(edge_weight=event/duration) %>%
select(node_1=node_1_id, node_2=node_2_id, edge_weight=edge_weight, event=event, duration=duration)
est <- get_edgelist(fit_edge, transform=TRUE) %>%
select(node_1, node_2, est=median, est_lb="5%", est_ub="95%")
comparison <- left_join(sri, est, by=c("node_1", "node_2"))
plot(comparison$edge_weight, comparison$est)
arrows(x0=comparison$edge_weight, y0=comparison$est_lb, x1=comparison$edge_weight, y1=comparison$est_ub, angle=0)
abline(a=0, b=1)
sim_data <- simulate_edge_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("binary")
priors
priors$edge <- "beta(2, 2)"
priors
summary(fit_edge)
plot_network(fit_edge, lwd=0.5)
plot_predictions(fit_edge, num_draws=100)
summary(fit_edge)
fit_edge$input_data
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
fit_edge$data_type
get_edgelist(fit_edge)
get_edgelist(fit_edge)[, 3]
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
get_edgelist(fit_edge)[, 3]
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
plot_predictions(fit_edge, num_draws=20)
sim_data <- simulate_edge_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("binary")
priors
priors$edge <- "beta(2, 2)"
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
priors$edge <- "beta(2, 2)"
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
priors <- get_default_priors("binary")
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=20)
summary(fit_edge)
priors <- get_default_priors("binary_conjugate")
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
plot_predictions(fit_edge, num_draws=20)
sim_data <- simulate_edge_model("count", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
sim_data <- simulate_edge_model("count_conjugate", aggregated = TRUE)
sim_data <- simulate_edge_model("count_conjugate", aggregated = TRUE)
sim_data <- simulate_edge_model("count", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("count_conjugate")
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate",
priors=priors
)
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="count_conjugate",
priors=priors
)
plot_trace(fit_edge)
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="count_conjugate",
priors=priors
)
plot_predictions(fit_edge, num_draws=20)
plot_trace(fit_edge)
priors$edge <- "normal(0, 1)"
priors
sim_data <- simulate_edge_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
priors <- get_default_priors("binary")
priors
priors$edge <- "normal(0, 1)"
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
priors$edge <- "normal(0, 2.5)"
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
summary(fit_edge)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(dplyr)
library(igraph)
set.seed(123)
# Load data in with minimal effects
sim_data <- simulate_edge_model("binary", aggregated = TRUE, location_effect = FALSE, age_diff_effect = FALSE)
df <- sim_data$df_sim
# Fit model to the data
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary"
)
# Extract estimates and true values.
true <- sim_data$df_true %>%
mutate(edge_weight=edge_weight) %>%
select(node_1=node_1_id, node_2=node_2_id, true=edge_weight)
est <- get_edgelist(fit_edge, transform=FALSE) %>%
select(node_1, node_2, est=median, est_lb="5%", est_ub="95%")
comparison <- left_join(true, est, by=c("node_1", "node_2"))
# Calculate correlation between estimates and true values.
proportion_within_ci <- mean(comparison$true < comparison$est_ub & comparison$est > comparison$est_lb)
expect_gt(proportion_within_ci, 0.9)
# Check that plots don't produce warnings
expect_warning(plot_predictions(fit_edge), regexp=NA)
expect_warning(plot_network(fit_edge), regexp=NA)
expect_warning(plot_trace(fit_edge, par_ids=1), regexp=NA)
expect_output(summary(fit_edge))
# Modify comparison dataframe to test dyadic regression.
df_dyadic <- comparison
dyadic_trait <- rnorm(nrow(df_dyadic), df_dyadic$true)
df_dyadic$dyadic_trait <- dyadic_trait
dyadic_coef_true <- lm(true ~ dyadic_trait, df_dyadic)$coefficient[[2]]
fit_dyadic <- dyadic_regression(dyad(node_1, node_2) ~ dyadic_trait, fit_edge, df_dyadic, mm=FALSE)
summary_dyadic <- summary(fit_dyadic)
expect_equal(summary_dyadic[1, 2] <= 0.1 & summary_dyadic[1, 3] >= -0.1, TRUE)
expect_equal(summary_dyadic[2, 2] < dyadic_coef_true & summary_dyadic[2, 3] > dyadic_coef_true, TRUE)
dyadic_coef_true
summary_dyadic[2, 2]
summary_dyadic[2, 3]
summary_dyadic
lm(true ~ dyadic_trait, df_dyadic)
summary(lm(true ~ dyadic_trait, df_dyadic))
get_default_priors("binary")
get_default_priors("dyadic_regression")
devtools::load_all(".")
devtools::test()
devtools::test()
library(bisonR)
library(dplyr)
sim_data <- simulate_edge_model("binary", aggregated = TRUE)
df <- sim_data$df_sim
head(df)
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate"
)
devtools::load_all(".")
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate"
)
devtools::load_all(".")
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary_conjugate"
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=20)
plot_predictions(fit_edge, num_draws=100)
plot_predictions(fit_edge, num_draws=10)
summary(fit_edge)
plot_network(fit_edge, lwd=0.5)
devtools::test()
df
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
priors <- get_default_priors("binary")
priors
priors$edge <- "normal(0, 2.5)"
priors
fit_edge <- edge_model(
(event | duration) ~ dyad(node_1_id, node_2_id),
data=df,
data_type="binary",
priors=priors
)
plot_trace(fit_edge)
plot_predictions(fit_edge, num_draws=10)
rhnorm
rlnorm
devtools::load_all(".")
plot_predictions(fit_edge, num_draws=10)
plot_predictions(fit_edge, num_draws=10, type="point")
plot_predictions(fit_edge, num_draws=10, type="density")
plot_predictions(fit_edge, num_draws=10, type="point")
plot_predictions(fit_edge, num_draws=10)
plot_predictions(fit_edge, num_draws=10, type="point")
plot(density(rbeta(1e5, 1, 1)))
plot(density(rbeta(1e5, 2, 1)))
plot(density(rbeta(1e5, 2, 5)))
.libPaths()
